Q1
%%sql
SELECT COUNT(DISTINCT Dog_Guid)
FROM complete_tests
WHERE created_at > '2014-03-01';

Q2
%sql SELECT COUNT(*) FROM dogs;

Q3
%%sql
SELECT COUNT(exclude) 
FROM dogs;

Q4
%%sql
SELECT COUNT(DISTINCT dog_guid)
FROM dogs
WHERE exclude = 1;

Q5
%%sql
SELECT test_name, 
AVG(rating) AS avg_rating,
MIN(rating) AS min_rating,
MAX(rating) AS max_rating
FROM reviews
WHERE test_name = 'Memory versus Pointing';

Q6
%%sql
SELECT TIMESTAMPDIFF(MINUTE, start_time, end_time) AS Duration
FROM exam_answers;

07
%%sql
SELECT dog_guid, start_time, end_time, TIMESTAMPDIFF(MINUTE, start_time, end_time) AS Duration
FROM exam_answers;

08.
%%sql
SELECT AVG(TIMESTAMPDIFF(minute, start_time, end_time)) AS avg_time
FROM exam_answers;

09.
%%sql
SELECT AVG(TIMESTAMPDIFF(minute, start_time, end_time)) AS avg_time_TWU
FROM exam_answers
WHERE test_name = 'treat warm-up';

10.
%%sql
SELECT COUNT(DISTINCT test_name) 
FROM exam_answers;

11.
%%sql
SELECT MIN(TIMESTAMPDIFF(MINUTE, start_time, end_time)) AS MIN_value, 
MAX(TIMESTAMPDIFF(MINUTE, start_time, end_time)) AS MAX_value
FROM exam_answers;

12. 
%%sql
SELECT COUNT(TIMESTAMPDIFF(MINUTE, start_time, end_time)) AS count_diff
FROM exam_answers
WHERE TIMESTAMPDIFF(MINUTE, start_time, end_time) < 0;

13. 
%%sql
SELECT *
FROM exam_answers
WHERE TIMESTAMPDIFF(MINUTE, start_time, end_time) < 0;

14.
%%sql
SELECT AVG(TIMESTAMPDIFF(MINUTE, start_time, end_time)) AS avg_adjusted
FROM exam_answers
WHERE TIMESTAMPDIFF(MINUTE, start_time, end_time)>0;
